Description
There's an interesting script in the user's home directory
The work computer is running SSH. We've been given a script which performs some basic calculations, explore the script and find a flag.
Hostname: saturn.picoctf.net
Port:     62566
Username: picoplayer
Password: password

In this challenge looking at the details given we are supposed to connect to the given server
syntax to use ssh to connect using those details is:
                                  ssh -p port_number user_name@target_domain_name
then give the password to connect to the target successfully.

diva_bs-picoctf@webshell:~$ ssh -p 62566 picoplayer@saturn.picoctf.net
The authenticity of host '[saturn.picoctf.net]:62566 ([13.59.203.175]:62566)' can't be established.
ED25519 key fingerprint is SHA256:DiJcS90U9QussLS8HLR6l6BGJb5eCA0vRmA18IvDvw8.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '[saturn.picoctf.net]:62566' (ED25519) to the list of known hosts.
picoplayer@saturn.picoctf.net's password: 
Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 6.5.0-1023-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

I listed out all the files or directories present and checked there content.

picoplayer@challenge:~$ ls
useless
picoplayer@challenge:~$ cat useless 
#!/bin/bash
# Basic mathematical operations via command-line arguments

if [ $# != 3 ]
then
  echo "Read the code first"
else
        if [[ "$1" == "add" ]]
        then 
          sum=$(( $2 + $3 ))
          echo "The Sum is: $sum"  

        elif [[ "$1" == "sub" ]]
        then 
          sub=$(( $2 - $3 ))
          echo "The Substract is: $sub" 

        elif [[ "$1" == "div" ]]
        then 
          div=$(( $2 / $3 ))
          echo "The quotient is: $div" 

        elif [[ "$1" == "mul" ]]
        then
          mul=$(( $2 * $3 ))
          echo "The product is: $mul" 

        else
          echo "Read the manual"
         
        fi
fi

Here we found a file clueless on checking the contents it looks like a bash script.
Bash (short for Bourne Again SHell) is a command-line interpreter, or shell, used widely on Unix-like operating systems, including Linux and macOS. 
It is the default shell on most Linux distributions and is also available on Windows via the Windows Subsystem for Linux (WSL).
so i tried running this bash script the outcome came is read the code first.
on reading the code and the else statement it says read the manual so I opened the manual to the script using the man command
i.e     man tool_name
        man useless

picoplayer@challenge:~$ bash useless 
Read the code first
picoplayer@challenge:~$ ./useless 
Read the code first
picoplayer@challenge:~$ ./useless 1 2
Read the code first
picoplayer@challenge:~$ ./useless add
Read the code first
picoplayer@challenge:~$ man useless 

useless
     useless, -- This is a simple calculator script

SYNOPSIS
     useless, [add sub mul div] number1 number2

DESCRIPTION
     Use the useless, macro to make simple calulations like addition,subtraction, multi-
     plication and division.

Examples
     ./useless add 1 2
       This will add 1 and 2 and return 3

     ./useless mul 2 3
       This will return 6 as a product of 2 and 3

     ./useless div 6 3
       This will return 2 as a quotient of 6 and 3

     ./useless sub 6 5
       This will return 1 as a remainder of substraction of 5 from 6

Authors
     This script was designed and developed by Cylab Africa

     picoCTF{us3l3ss_ch4ll3ng3_3xpl0it3d_5136}

And we can see how we use the tool and the flag at the end of the manual.
